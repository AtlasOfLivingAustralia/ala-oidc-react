AWSTemplateFormatVersion: "2010-09-09"
Description: Code pipeline for security scan list

Parameters:
  pEnvironment:
    Type: String
    Description: The AWS environment this belongs to
  pCloudFormationServiceRole:
    Type: String
    Description: Common service role used by Cloudformation
  pCodeBuildServiceRole:
    Type: String
    Description: Common service role used by CodeBuild
  pAppStackName:
    Type: String
    Description: The name of the application stack
  pProductName:
    Type: String
    Description: The name of the product
  pCodePipelineServiceRole:
    Type: String
    Description: Common service role used by CodePipeline
  pArtifactsBucket:
    Type: String
    Description: Common artifacts bucket used by CodePipeline and CodeBuild
  pGitHubRepositoryName:
    Type: String
    Description: GitHub repository name.
  pGitHubOwner:
    Type: String
    Description: GitHub owner
  pGitHubBranch:
    Type: String
    Description: GitHub branch we're deploying from
  pCleanBranch:
    Type: String
    Description: The clean branch, can be used in resource names
  pCodestarConnection:
    Type: String
    Description: Codestar connection ARN

Resources:
 
  ExportConfig:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${pProductName}-export-config-${pCleanBranch}
      Description: Load the environment and build the CloudFormation template config file
      ServiceRole: !Ref pCodeBuildServiceRole
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
          - Name: AWS_ARTIFACTS_BUCKET
            Value: !Ref pArtifactsBucket
          - Name: CLEAN_BRANCH
            Value: !Ref pCleanBranch
      Source:
        Type: CODEPIPELINE
        BuildSpec: cicd/pipeline/export_config_buildspec.yaml
      TimeoutInMinutes: 5

  BuildCode:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub docs-portal-pkce-build-site-${pEnvironment}
      Description: Build the docsportal pkce site
      ServiceRole: !Ref pCodeBuildServiceRole
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
          - Name: "AWS_ARTIFACTS_BUCKET"
            Value: !Ref pArtifactsBucket
      Source:
        Type: CODEPIPELINE
        BuildSpec: cicd/npm_build_buildspec.yaml
      TimeoutInMinutes: 10

  EmptyBucket:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub asbp-empty-bucket-${pEnvironment}
      Description: Empty the source s3 bucket before updating
      ServiceRole: !Ref pCodeBuildServiceRole
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
          - Name: "AWS_ARTIFACTS_BUCKET"
            Value: !Ref pArtifactsBucket
      Source:
        Type: CODEPIPELINE
        BuildSpec: cicd/empty_bucket_buildspec.yaml
      TimeoutInMinutes: 5


  Pipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name: !Sub ${pProductName}-${pCleanBranch}
      RoleArn: !Ref pCodePipelineServiceRole
      ArtifactStore:
        Type: S3
        Location: !Ref pArtifactsBucket
      DisableInboundStageTransitions:
        - Reason: To prevent accidental teardown
          StageName: Teardown
      Stages:
      - Name: Checkout_Source
        Actions:
          - Name: CheckoutSrc
            ActionTypeId:
              Category: Source
              Owner: AWS
              Provider: CodeStarSourceConnection
              Version: 1
            Configuration:
              ConnectionArn: !Ref pCodestarConnection
              FullRepositoryId: !Sub ${pGitHubOwner}/${pGitHubRepositoryName}
              BranchName: !Ref pGitHubBranch
              OutputArtifactFormat: CODE_ZIP
              DetectChanges: false
            Namespace: CheckoutSrcNS
            OutputArtifacts:
              - Name: 'SourceArtifact'
      - Name: Deploy_Infrastructure
        Actions:
          - Name: ExportConfig
            ActionTypeId:
              Owner: AWS
              Category: Build
              Version: 1
              Provider: CodeBuild
            Configuration:
              ProjectName: !Ref ExportConfig
              EnvironmentVariables: !Sub '[
                                       { "name":"SRC_BRANCH", "value":"#{CheckoutSrcNS.BranchName}" },
                                       { "name":"COMMIT_ID", "value":"#{CheckoutSrcNS.CommitId}" },
                                       { "name":"ENVIRONMENT", "value":"${pEnvironment}" }
                                     ]'
            Namespace: ExportConfigNS
            InputArtifacts:
              - Name: 'SourceArtifact'
            OutputArtifacts:
              - Name: ExportConfigArtifact
            RunOrder: 1
          - Name: DeployCfStack
            ActionTypeId:
              Owner: AWS
              Category: Deploy
              Version: 1
              Provider: CloudFormation
            Configuration:
              TemplatePath: 'ExportConfigArtifact::cicd/app/#{ExportConfigNS.APP_STACK_FILE}'
              TemplateConfiguration: 'ExportConfigArtifact::cicd/app/docs_portal_pkce_template_config.json'
              ActionMode: CREATE_UPDATE
              Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
              RoleArn: !Ref pCloudFormationServiceRole
              StackName: !Ref pAppStackName
            InputArtifacts:
              - Name: 'ExportConfigArtifact'
            Namespace: AppCloudFormationOutNS
            OutputArtifacts: []
            RunOrder: 3
      - Name: Publish_Website
        Actions:
          - Name: BuildCode
            ActionTypeId:
              Owner: AWS
              Category: Build
              Version: 1
              Provider: CodeBuild
            Configuration:
              ProjectName: !Ref BuildCode
              EnvironmentVariables: '[
                                       { "name":"SRC_BRANCH", "value":"#{CheckoutSrcNS.BranchName}" },
                                       { "name":"COMMIT_ID", "value":"#{CheckoutSrcNS.CommitId}" }
                                     ]'
            Namespace: BuildCodeNS
            InputArtifacts:
              - Name: 'SourceArtifact'
            OutputArtifacts:
              - Name: BuildCodeArtifact
            RunOrder: 1
          - Name: EmptyBucketPreDeploy
            ActionTypeId:
              Owner: AWS
              Category: Build
              Version: 1
              Provider: CodeBuild
            Configuration:
              ProjectName: !Ref EmptyBucket
              EnvironmentVariables: '[
                                       { "name":"SOURCE_BUCKET", "value":"#{ExportConfigNS.SOURCE_BUCKET}" },
                                       { "name":"BUCKET_PATH", "value":"#{ExportConfigNS.BUCKET_PATH}" }
                                     ]'
            Namespace: EmptyBucketPreDeployNS
            InputArtifacts:
              - Name: 'SourceArtifact'
            RunOrder: 2
          - Name: UploadFilesToS3
            ActionTypeId:
              Owner: AWS
              Category: Deploy
              Version: 1
              Provider: S3
            Configuration:
              BucketName: '#{ExportConfigNS.SOURCE_BUCKET}'
              ObjectKey: '#{ExportConfigNS.BUCKET_PATH}'
              Extract: 'true'
              CacheControl: "public, max-age=#{ExportConfigNS.MAX_AGE}"
            OutputArtifacts: []
            InputArtifacts:
              - Name: BuildCodeArtifact
            RunOrder: 3

      - Name: Teardown
        Actions:
          - Name: Approval
            ActionTypeId:
              Owner: AWS
              Category: Approval
              Version: 1
              Provider: Manual
            Configuration:
              CustomData: Approval required to tear down this stack
            RunOrder: 1
          - Name: EmptyBucketForTeardown
            ActionTypeId:
              Owner: AWS
              Category: Build
              Version: 1
              Provider: CodeBuild
            Configuration:
              ProjectName: !Ref EmptyBucket
              EnvironmentVariables: '[
                                       { "name":"SOURCE_BUCKET", "value":"#{ExportConfigNS.SOURCE_BUCKET}" },
                                       { "name":"BUCKET_PATH", "value":"#{ExportConfigNS.BUCKET_PATH}" }
                                     ]'
            Namespace: EmptyBucketForTeardownNS
            InputArtifacts:
              - Name: 'SourceArtifact'
            RunOrder: 2
          - Name: TeardownAppStack
            ActionTypeId:
              Owner: AWS
              Category: Deploy
              Version: 1
              Provider: CloudFormation
            Configuration:
              ActionMode: DELETE_ONLY
              StackName: !Ref pAppStackName
              RoleArn: !Ref pCloudFormationServiceRole
            RunOrder: 3

  CodeBuildLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Sub
                       - /aws/codebuild/${ProjectName}
                       - ProjectName: !Ref ExportConfig
      RetentionInDays: 30
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName

  BuildCodeLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Sub
                       - /aws/codebuild/${ProjectName}
                       - ProjectName: !Ref BuildCode
      RetentionInDays: 30
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName

  EmptyBucketPdLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Sub
                       - /aws/codebuild/${ProjectName}
                       - ProjectName: !Ref EmptyBucket
      RetentionInDays: 30
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName

  EmptyBucketTdLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Sub
                       - /aws/codebuild/${ProjectName}
                       - ProjectName: !Ref EmptyBucket
      RetentionInDays: 30
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName

Outputs:
  PipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}
